// <auto-generated />
using System;
using CRUD.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUD.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220822145016_SeedTest")]
    partial class SeedTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CRUD.WebAPI.Privilages.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f09950d4-d252-40be-af43-8f586cee8a90"),
                            PermissionDescription = "TODO",
                            PermissionName = "GetAll",
                            RoleId = new Guid("1ef25ac2-b6d0-449e-bfaf-1ae2324d6781")
                        },
                        new
                        {
                            Id = new Guid("d200bbdd-bf60-4b30-9c94-8ff5ccb64731"),
                            PermissionDescription = "TODO",
                            PermissionName = "Get",
                            RoleId = new Guid("1ef25ac2-b6d0-449e-bfaf-1ae2324d6781")
                        },
                        new
                        {
                            Id = new Guid("3b168146-dc1e-46b5-894c-2aee1cadb7eb"),
                            PermissionDescription = "TODO",
                            PermissionName = "Create",
                            RoleId = new Guid("1ef25ac2-b6d0-449e-bfaf-1ae2324d6781")
                        },
                        new
                        {
                            Id = new Guid("edab12fc-77af-4c59-8b09-64bfb0285aa8"),
                            PermissionDescription = "TODO",
                            PermissionName = "Update",
                            RoleId = new Guid("1ef25ac2-b6d0-449e-bfaf-1ae2324d6781")
                        },
                        new
                        {
                            Id = new Guid("b717f8fe-3c4a-407b-88c6-b1625098561c"),
                            PermissionDescription = "TODO",
                            PermissionName = "Delete",
                            RoleId = new Guid("1ef25ac2-b6d0-449e-bfaf-1ae2324d6781")
                        });
                });

            modelBuilder.Entity("CRUD.WebAPI.Privilages.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ef25ac2-b6d0-449e-bfaf-1ae2324d6781"),
                            RoleName = "adminek"
                        });
                });

            modelBuilder.Entity("CRUD.WebAPI.Privilages.Permission", b =>
                {
                    b.HasOne("CRUD.WebAPI.Privilages.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CRUD.WebAPI.Privilages.Role", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
